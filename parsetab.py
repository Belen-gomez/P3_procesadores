
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightNOTleftANDORleftLELTGEGTEQleftSUMARESTAleftMULDIVleftUSUMAURESTAAND BOOLEAN CARACTER CCOMILLAS CHARACTER COMA CSINCOMILLAS DECIMAL DIV ELSE ENTERO EQ FL FLOAT FUNCTION GE GT IF IGUAL INT LBRACKET LCORCHETE LE LPARENT LT MUL NOT NULL OR PUNTO PUNTOS RBRACKET RCORCHETE RESTA RETURN RPARENT SEMICOLON SUMA TR TYPE WHILE let\n        program :  statement\n                | empty\n        \n        statement : content SEMICOLON\n                  | content SEMICOLON statement\n                  | noSM statement\n                  | noSM\n        \n        content : declaration\n                | assignment\n                | definicion_ajson\n        \n        noSM : function\n             | condition\n             | loop\n        \n        entero : ENTERO\n        \n        decimal : DECIMAL\n        \n        num : entero\n            | decimal\n        \n        bool : TR\n             | FL\n        \n        declaration : let id\n        \n        id : var\n           | var COMA id\n           | var IGUAL expr\n           | var IGUAL expr COMA id\n        \n        var : CSINCOMILLAS\n            | CSINCOMILLAS PUNTOS tipo\n        \n        tipo_ajson : CSINCOMILLAS\n        \n        tipo : INT\n             | FLOAT\n             | CHARACTER\n             | BOOLEAN\n             | tipo_ajson\n        \n        assignment : var IGUAL expr\n                     | punto_valor IGUAL expr\n                     | corchete IGUAL expr\n        \n        variable : CSINCOMILLAS\n        \n        cadena : CARACTER\n        \n        parentesis : LPARENT expr RPARENT\n        \n        signos : SUMA expr %prec USUMA\n               | RESTA expr %prec URESTA\n        \n        expr : operacion\n              | num\n              | bool\n              | NULL  \n              | variable\n              | signos\n              | cadena\n              | ajson\n              | parentesis\n              | pc\n              | functioncall\n        \n        operacion : aritmetica\n                  | binaria\n                  | comparation\n        \n        aritmetica : expr SUMA expr\n                   | expr RESTA expr\n                   | expr MUL expr %prec MUL\n                   | expr DIV expr %prec DIV\n        \n        binaria : expr AND expr\n                | expr OR expr\n                | NOT expr\n        \n        comparation : expr LE expr\n                    | expr LT expr\n                    | expr GE expr\n                    | expr GT expr\n                    | expr EQ expr\n        \n        definicion_ajson : TYPE CSINCOMILLAS IGUAL ajson_t\n        \n        ajson_t : LBRACKET object_t RBRACKET\n        \n        object_t : pair_t COMA object_t\n                 | pair_t COMA\n                 | pair_t\n        \n        pair_t : clave PUNTOS tipo\n                | clave PUNTOS ajson_t\n        \n        clave : CCOMILLAS\n                | CSINCOMILLAS\n        \n        ajson : LBRACKET object RBRACKET\n        \n        object : pair COMA object\n               | pair COMA\n               | pair\n        \n        pair : clave PUNTOS expr\n        \n        punto_valor : punto1\n                    | punto2\n                    | punto_corchete\n        \n        pc : punto_valor\n            | corchete\n        \n        punto1 : CSINCOMILLAS PUNTO CSINCOMILLAS    \n        \n        punto2 : CSINCOMILLAS PUNTO punto_valor\n        \n        punto_corchete : CSINCOMILLAS PUNTO corchete\n        \n        corchete : CSINCOMILLAS LCORCHETE CCOMILLAS RCORCHETE recur_corchete\n        \n        recur_corchete : LCORCHETE CCOMILLAS RCORCHETE recur_corchete\n                       | empty   \n                       | PUNTO CSINCOMILLAS\n                       | PUNTO punto_valor                   \n        \n        condition : IF LPARENT expr RPARENT LBRACKET statement RBRACKET\n                  | IF LPARENT expr RPARENT LBRACKET statement RBRACKET ELSE LBRACKET statement RBRACKET\n        \n        loop : WHILE LPARENT expr RPARENT LBRACKET statement RBRACKET\n        \n        function : function_no_args\n                 | function_args\n        \n        function_args : FUNCTION CSINCOMILLAS LPARENT arg_list RPARENT PUNTOS tipo LBRACKET statement RETURN expr SEMICOLON RBRACKET\n                        | FUNCTION CSINCOMILLAS LPARENT arg_list RPARENT PUNTOS tipo LBRACKET RETURN expr SEMICOLON RBRACKET\n        \n        function_no_args : FUNCTION CSINCOMILLAS LPARENT RPARENT PUNTOS tipo LBRACKET statement RETURN expr SEMICOLON RBRACKET\n                            | FUNCTION CSINCOMILLAS LPARENT RPARENT PUNTOS tipo LBRACKET RETURN expr SEMICOLON RBRACKET\n        \n        arg_list : CSINCOMILLAS PUNTOS tipo\n                 | CSINCOMILLAS PUNTOS tipo COMA arg_list\n        \n        functioncall : CSINCOMILLAS LPARENT RPARENT \n                     | CSINCOMILLAS LPARENT argumentos RPARENT\n        \n        argumentos : expr\n                   | expr COMA argumentos\n        \n        empty : \n        '
    
_lr_action_items = {'$end':([0,1,2,3,5,9,10,11,18,19,26,27,41,174,175,195,197,200,202,203,],[-108,0,-1,-2,-6,-10,-11,-12,-96,-97,-3,-5,-4,-93,-95,-94,-101,-100,-99,-98,]),'let':([0,5,9,10,11,18,19,26,148,149,174,175,177,184,185,195,197,200,202,203,],[12,12,-10,-11,-12,-96,-97,12,12,12,-93,-95,12,12,12,-94,-101,-100,-99,-98,]),'TYPE':([0,5,9,10,11,18,19,26,148,149,174,175,177,184,185,195,197,200,202,203,],[16,16,-10,-11,-12,-96,-97,16,16,16,-93,-95,16,16,16,-94,-101,-100,-99,-98,]),'IF':([0,5,9,10,11,18,19,26,148,149,174,175,177,184,185,195,197,200,202,203,],[20,20,-10,-11,-12,-96,-97,20,20,20,-93,-95,20,20,20,-94,-101,-100,-99,-98,]),'WHILE':([0,5,9,10,11,18,19,26,148,149,174,175,177,184,185,195,197,200,202,203,],[21,21,-10,-11,-12,-96,-97,21,21,21,-93,-95,21,21,21,-94,-101,-100,-99,-98,]),'CSINCOMILLAS':([0,5,9,10,11,12,16,18,19,25,26,31,32,33,35,37,38,39,42,43,64,65,67,68,71,90,93,94,95,96,97,98,99,100,101,102,103,104,115,122,138,139,147,148,149,150,151,155,159,160,168,174,175,176,177,183,184,185,186,189,193,195,197,200,202,203,],[17,17,-10,-11,-12,30,34,-96,-97,40,17,63,63,63,77,85,63,63,30,63,63,63,111,63,63,119,63,63,63,63,63,63,63,63,63,63,63,63,111,30,111,63,162,17,17,77,77,63,111,77,77,-93,-95,119,17,63,17,17,63,63,63,-94,-101,-100,-99,-98,]),'FUNCTION':([0,5,9,10,11,18,19,26,148,149,174,175,177,184,185,195,197,200,202,203,],[25,25,-10,-11,-12,-96,-97,25,25,25,-93,-95,25,25,25,-94,-101,-100,-99,-98,]),'SEMICOLON':([4,6,7,8,22,23,24,28,29,30,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,77,78,79,80,81,82,83,85,86,87,91,92,105,106,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,137,140,145,146,153,154,158,162,163,173,179,187,191,194,198,],[26,-7,-8,-9,-80,-81,-82,-19,-20,-24,-32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,-33,-34,-26,-25,-27,-28,-29,-30,-31,-85,-86,-87,-21,-22,-38,-39,-60,-66,-108,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-65,-104,-75,-37,-88,-90,-23,-105,-67,-91,-92,-108,-89,192,196,199,201,]),'RBRACKET':([5,9,10,11,18,19,22,23,24,26,27,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,77,79,80,81,82,83,85,86,87,105,106,107,108,113,116,123,124,125,126,127,128,129,130,131,132,133,134,137,138,140,141,142,145,146,154,156,157,158,159,162,163,164,165,170,171,172,173,174,175,179,190,192,195,196,197,199,200,201,202,203,],[-6,-10,-11,-12,-96,-97,-80,-81,-82,-3,-5,-4,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,-26,-27,-28,-29,-30,-31,-85,-86,-87,-38,-39,137,-78,-60,-108,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-65,-104,-75,-77,-37,158,-70,-88,-90,-105,-76,-79,-67,-69,-91,-92,174,175,-68,-71,-72,-108,-93,-95,-89,195,197,-94,200,-101,202,-100,203,-99,-98,]),'RETURN':([5,9,10,11,18,19,26,27,41,174,175,177,182,184,188,195,197,200,202,203,],[-6,-10,-11,-12,-96,-97,-3,-5,-4,-93,-95,183,186,189,193,-94,-101,-100,-99,-98,]),'IGUAL':([13,14,15,17,22,23,24,29,30,34,77,78,79,80,81,82,83,85,86,87,116,145,146,162,163,173,179,],[31,32,33,-24,-80,-81,-82,43,-24,76,-26,-25,-27,-28,-29,-30,-31,-85,-86,-87,-108,-88,-90,-91,-92,-108,-89,]),'PUNTOS':([17,30,109,110,111,119,120,143,152,],[35,35,139,-73,-74,150,151,160,168,]),'LCORCHETE':([17,63,85,116,173,],[36,36,36,144,144,]),'PUNTO':([17,63,85,116,162,173,],[37,37,37,147,37,147,]),'LPARENT':([20,21,31,32,33,38,39,40,43,63,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[38,39,68,68,68,68,68,90,68,104,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'SUMA':([22,23,24,31,32,33,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,139,140,145,146,154,155,157,162,163,173,179,183,186,187,189,191,193,194,198,],[-80,-81,-82,64,64,64,64,64,64,93,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,64,64,-36,64,-83,-84,64,-13,-14,93,93,-85,-86,-87,93,93,93,64,64,64,64,64,64,64,64,64,64,64,64,-38,-39,93,93,-108,-54,-55,-56,-57,93,93,93,93,93,93,93,-104,93,-75,64,-37,-88,-90,-105,64,93,-91,-92,-108,-89,64,64,93,64,93,64,93,93,]),'RESTA':([22,23,24,31,32,33,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,139,140,145,146,154,155,157,162,163,173,179,183,186,187,189,191,193,194,198,],[-80,-81,-82,65,65,65,65,65,65,94,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,65,65,-36,65,-83,-84,65,-13,-14,94,94,-85,-86,-87,94,94,94,65,65,65,65,65,65,65,65,65,65,65,65,-38,-39,94,94,-108,-54,-55,-56,-57,94,94,94,94,94,94,94,-104,94,-75,65,-37,-88,-90,-105,65,94,-91,-92,-108,-89,65,65,94,65,94,65,94,94,]),'MUL':([22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,85,86,87,88,89,92,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,145,146,154,157,162,163,173,179,187,191,194,198,],[-80,-81,-82,95,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,95,95,-85,-86,-87,95,95,95,-38,-39,95,95,-108,95,95,-56,-57,95,95,95,95,95,95,95,-104,95,-75,-37,-88,-90,-105,95,-91,-92,-108,-89,95,95,95,95,]),'DIV':([22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,85,86,87,88,89,92,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,145,146,154,157,162,163,173,179,187,191,194,198,],[-80,-81,-82,96,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,96,96,-85,-86,-87,96,96,96,-38,-39,96,96,-108,96,96,-56,-57,96,96,96,96,96,96,96,-104,96,-75,-37,-88,-90,-105,96,-91,-92,-108,-89,96,96,96,96,]),'AND':([22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,85,86,87,88,89,92,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,145,146,154,157,162,163,173,179,187,191,194,198,],[-80,-81,-82,97,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,97,97,-85,-86,-87,97,97,97,-38,-39,97,97,-108,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-65,-104,97,-75,-37,-88,-90,-105,97,-91,-92,-108,-89,97,97,97,97,]),'OR':([22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,85,86,87,88,89,92,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,145,146,154,157,162,163,173,179,187,191,194,198,],[-80,-81,-82,98,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,98,98,-85,-86,-87,98,98,98,-38,-39,98,98,-108,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-65,-104,98,-75,-37,-88,-90,-105,98,-91,-92,-108,-89,98,98,98,98,]),'LE':([22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,85,86,87,88,89,92,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,145,146,154,157,162,163,173,179,187,191,194,198,],[-80,-81,-82,99,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,99,99,-85,-86,-87,99,99,99,-38,-39,99,99,-108,-54,-55,-56,-57,99,99,-61,-62,-63,-64,-65,-104,99,-75,-37,-88,-90,-105,99,-91,-92,-108,-89,99,99,99,99,]),'LT':([22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,85,86,87,88,89,92,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,145,146,154,157,162,163,173,179,187,191,194,198,],[-80,-81,-82,100,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,100,100,-85,-86,-87,100,100,100,-38,-39,100,100,-108,-54,-55,-56,-57,100,100,-61,-62,-63,-64,-65,-104,100,-75,-37,-88,-90,-105,100,-91,-92,-108,-89,100,100,100,100,]),'GE':([22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,85,86,87,88,89,92,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,145,146,154,157,162,163,173,179,187,191,194,198,],[-80,-81,-82,101,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,101,101,-85,-86,-87,101,101,101,-38,-39,101,101,-108,-54,-55,-56,-57,101,101,-61,-62,-63,-64,-65,-104,101,-75,-37,-88,-90,-105,101,-91,-92,-108,-89,101,101,101,101,]),'GT':([22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,85,86,87,88,89,92,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,145,146,154,157,162,163,173,179,187,191,194,198,],[-80,-81,-82,102,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,102,102,-85,-86,-87,102,102,102,-38,-39,102,102,-108,-54,-55,-56,-57,102,102,-61,-62,-63,-64,-65,-104,102,-75,-37,-88,-90,-105,102,-91,-92,-108,-89,102,102,102,102,]),'EQ':([22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,74,75,85,86,87,88,89,92,105,106,112,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,145,146,154,157,162,163,173,179,187,191,194,198,],[-80,-81,-82,103,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,103,103,-85,-86,-87,103,103,103,-38,-39,103,103,-108,-54,-55,-56,-57,103,103,-61,-62,-63,-64,-65,-104,103,-75,-37,-88,-90,-105,103,-91,-92,-108,-89,103,103,103,103,]),'RPARENT':([22,23,24,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,77,79,80,81,82,83,85,86,87,88,89,90,104,105,106,112,113,116,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,145,146,154,162,163,166,169,173,179,181,],[-80,-81,-82,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,-26,-27,-28,-29,-30,-31,-85,-86,-87,117,118,120,134,-38,-39,140,-60,-108,152,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-65,-104,154,-106,-75,-37,-88,-90,-105,-91,-92,-102,-107,-108,-89,-103,]),'COMA':([22,23,24,29,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,72,73,77,78,79,80,81,82,83,85,86,87,92,105,106,108,113,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,142,145,146,154,157,158,162,163,166,171,172,173,179,],[-80,-81,-82,42,-24,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-15,-16,-17,-18,-35,-36,-83,-84,-13,-14,-26,-25,-27,-28,-29,-30,-31,-85,-86,-87,122,-38,-39,138,-60,-108,-54,-55,-56,-57,-58,-59,-61,-62,-63,-64,-65,-104,155,-75,-37,159,-88,-90,-105,-79,-67,-91,-92,176,-71,-72,-108,-89,]),'NULL':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'TR':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FL':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'CARACTER':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LBRACKET':([31,32,33,38,39,43,64,65,68,71,76,77,79,80,81,82,83,93,94,95,96,97,98,99,100,101,102,103,104,117,118,139,155,160,167,178,180,183,186,189,193,],[67,67,67,67,67,67,67,67,67,67,115,-26,-27,-28,-29,-30,-31,67,67,67,67,67,67,67,67,67,67,67,67,148,149,67,67,115,177,184,185,67,67,67,67,]),'NOT':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'ENTERO':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'DECIMAL':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'INT':([35,150,151,160,168,],[79,79,79,79,79,]),'FLOAT':([35,150,151,160,168,],[80,80,80,80,80,]),'CHARACTER':([35,150,151,160,168,],[81,81,81,81,81,]),'BOOLEAN':([35,150,151,160,168,],[82,82,82,82,82,]),'CCOMILLAS':([36,67,115,138,144,159,],[84,110,110,110,161,110,]),'RCORCHETE':([84,161,],[116,173,]),'ELSE':([174,],[180,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,5,26,148,149,177,184,185,],[2,27,41,164,165,182,188,190,]),'empty':([0,116,173,],[3,146,146,]),'content':([0,5,26,148,149,177,184,185,],[4,4,4,4,4,4,4,4,]),'noSM':([0,5,26,148,149,177,184,185,],[5,5,5,5,5,5,5,5,]),'declaration':([0,5,26,148,149,177,184,185,],[6,6,6,6,6,6,6,6,]),'assignment':([0,5,26,148,149,177,184,185,],[7,7,7,7,7,7,7,7,]),'definicion_ajson':([0,5,26,148,149,177,184,185,],[8,8,8,8,8,8,8,8,]),'function':([0,5,26,148,149,177,184,185,],[9,9,9,9,9,9,9,9,]),'condition':([0,5,26,148,149,177,184,185,],[10,10,10,10,10,10,10,10,]),'loop':([0,5,26,148,149,177,184,185,],[11,11,11,11,11,11,11,11,]),'var':([0,5,12,26,42,122,148,149,177,184,185,],[13,13,29,13,29,29,13,13,13,13,13,]),'punto_valor':([0,5,26,31,32,33,37,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,147,148,149,155,177,183,184,185,186,189,193,],[14,14,14,69,69,69,86,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,163,14,14,69,14,69,14,14,69,69,69,]),'corchete':([0,5,26,31,32,33,37,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,148,149,155,177,183,184,185,186,189,193,],[15,15,15,70,70,70,87,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,15,15,70,15,70,15,15,70,70,70,]),'function_no_args':([0,5,26,148,149,177,184,185,],[18,18,18,18,18,18,18,18,]),'function_args':([0,5,26,148,149,177,184,185,],[19,19,19,19,19,19,19,19,]),'punto1':([0,5,26,31,32,33,37,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,147,148,149,155,177,183,184,185,186,189,193,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'punto2':([0,5,26,31,32,33,37,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,147,148,149,155,177,183,184,185,186,189,193,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'punto_corchete':([0,5,26,31,32,33,37,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,147,148,149,155,177,183,184,185,186,189,193,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'id':([12,42,122,],[28,91,153,]),'expr':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[44,74,75,88,89,92,105,106,112,113,123,124,125,126,127,128,129,130,131,132,133,136,157,136,187,191,194,198,]),'operacion':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'num':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'bool':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'variable':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'signos':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'cadena':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'ajson':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'parentesis':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'pc':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'functioncall':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'aritmetica':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'binaria':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'comparation':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'entero':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'decimal':([31,32,33,38,39,43,64,65,68,71,93,94,95,96,97,98,99,100,101,102,103,104,139,155,183,186,189,193,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'tipo':([35,150,151,160,168,],[78,166,167,171,178,]),'tipo_ajson':([35,150,151,160,168,],[83,83,83,83,83,]),'object':([67,138,],[107,156,]),'pair':([67,138,],[108,108,]),'clave':([67,115,138,159,],[109,143,109,143,]),'ajson_t':([76,160,],[114,172,]),'arg_list':([90,176,],[121,181,]),'argumentos':([104,155,],[135,169,]),'object_t':([115,159,],[141,170,]),'pair_t':([115,159,],[142,142,]),'recur_corchete':([116,173,],[145,179,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','ajson_parser.py',47),
  ('program -> empty','program',1,'p_program','ajson_parser.py',48),
  ('statement -> content SEMICOLON','statement',2,'p_statement','ajson_parser.py',53),
  ('statement -> content SEMICOLON statement','statement',3,'p_statement','ajson_parser.py',54),
  ('statement -> noSM statement','statement',2,'p_statement','ajson_parser.py',55),
  ('statement -> noSM','statement',1,'p_statement','ajson_parser.py',56),
  ('content -> declaration','content',1,'p_content','ajson_parser.py',61),
  ('content -> assignment','content',1,'p_content','ajson_parser.py',62),
  ('content -> definicion_ajson','content',1,'p_content','ajson_parser.py',63),
  ('noSM -> function','noSM',1,'p_noSM','ajson_parser.py',68),
  ('noSM -> condition','noSM',1,'p_noSM','ajson_parser.py',69),
  ('noSM -> loop','noSM',1,'p_noSM','ajson_parser.py',70),
  ('entero -> ENTERO','entero',1,'p_entero','ajson_parser.py',75),
  ('decimal -> DECIMAL','decimal',1,'p_decimal','ajson_parser.py',81),
  ('num -> entero','num',1,'p_num','ajson_parser.py',87),
  ('num -> decimal','num',1,'p_num','ajson_parser.py',88),
  ('bool -> TR','bool',1,'p_bool','ajson_parser.py',94),
  ('bool -> FL','bool',1,'p_bool','ajson_parser.py',95),
  ('declaration -> let id','declaration',2,'p_declaration','ajson_parser.py',101),
  ('id -> var','id',1,'p_id','ajson_parser.py',106),
  ('id -> var COMA id','id',3,'p_id','ajson_parser.py',107),
  ('id -> var IGUAL expr','id',3,'p_id','ajson_parser.py',108),
  ('id -> var IGUAL expr COMA id','id',5,'p_id','ajson_parser.py',109),
  ('var -> CSINCOMILLAS','var',1,'p_var','ajson_parser.py',149),
  ('var -> CSINCOMILLAS PUNTOS tipo','var',3,'p_var','ajson_parser.py',150),
  ('tipo_ajson -> CSINCOMILLAS','tipo_ajson',1,'p_tipo_ajson','ajson_parser.py',159),
  ('tipo -> INT','tipo',1,'p_tipo','ajson_parser.py',166),
  ('tipo -> FLOAT','tipo',1,'p_tipo','ajson_parser.py',167),
  ('tipo -> CHARACTER','tipo',1,'p_tipo','ajson_parser.py',168),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','ajson_parser.py',169),
  ('tipo -> tipo_ajson','tipo',1,'p_tipo','ajson_parser.py',170),
  ('assignment -> var IGUAL expr','assignment',3,'p_assignment','ajson_parser.py',176),
  ('assignment -> punto_valor IGUAL expr','assignment',3,'p_assignment','ajson_parser.py',177),
  ('assignment -> corchete IGUAL expr','assignment',3,'p_assignment','ajson_parser.py',178),
  ('variable -> CSINCOMILLAS','variable',1,'p_variable','ajson_parser.py',195),
  ('cadena -> CARACTER','cadena',1,'p_cadena','ajson_parser.py',202),
  ('parentesis -> LPARENT expr RPARENT','parentesis',3,'p_parentesis','ajson_parser.py',208),
  ('signos -> SUMA expr','signos',2,'p_signos','ajson_parser.py',214),
  ('signos -> RESTA expr','signos',2,'p_signos','ajson_parser.py',215),
  ('expr -> operacion','expr',1,'p_expr','ajson_parser.py',224),
  ('expr -> num','expr',1,'p_expr','ajson_parser.py',225),
  ('expr -> bool','expr',1,'p_expr','ajson_parser.py',226),
  ('expr -> NULL','expr',1,'p_expr','ajson_parser.py',227),
  ('expr -> variable','expr',1,'p_expr','ajson_parser.py',228),
  ('expr -> signos','expr',1,'p_expr','ajson_parser.py',229),
  ('expr -> cadena','expr',1,'p_expr','ajson_parser.py',230),
  ('expr -> ajson','expr',1,'p_expr','ajson_parser.py',231),
  ('expr -> parentesis','expr',1,'p_expr','ajson_parser.py',232),
  ('expr -> pc','expr',1,'p_expr','ajson_parser.py',233),
  ('expr -> functioncall','expr',1,'p_expr','ajson_parser.py',234),
  ('operacion -> aritmetica','operacion',1,'p_operacion','ajson_parser.py',240),
  ('operacion -> binaria','operacion',1,'p_operacion','ajson_parser.py',241),
  ('operacion -> comparation','operacion',1,'p_operacion','ajson_parser.py',242),
  ('aritmetica -> expr SUMA expr','aritmetica',3,'p_aritmetica','ajson_parser.py',248),
  ('aritmetica -> expr RESTA expr','aritmetica',3,'p_aritmetica','ajson_parser.py',249),
  ('aritmetica -> expr MUL expr','aritmetica',3,'p_aritmetica','ajson_parser.py',250),
  ('aritmetica -> expr DIV expr','aritmetica',3,'p_aritmetica','ajson_parser.py',251),
  ('binaria -> expr AND expr','binaria',3,'p_binaria','ajson_parser.py',364),
  ('binaria -> expr OR expr','binaria',3,'p_binaria','ajson_parser.py',365),
  ('binaria -> NOT expr','binaria',2,'p_binaria','ajson_parser.py',366),
  ('comparation -> expr LE expr','comparation',3,'p_comparation','ajson_parser.py',393),
  ('comparation -> expr LT expr','comparation',3,'p_comparation','ajson_parser.py',394),
  ('comparation -> expr GE expr','comparation',3,'p_comparation','ajson_parser.py',395),
  ('comparation -> expr GT expr','comparation',3,'p_comparation','ajson_parser.py',396),
  ('comparation -> expr EQ expr','comparation',3,'p_comparation','ajson_parser.py',397),
  ('definicion_ajson -> TYPE CSINCOMILLAS IGUAL ajson_t','definicion_ajson',4,'p_definicion_ajson','ajson_parser.py',466),
  ('ajson_t -> LBRACKET object_t RBRACKET','ajson_t',3,'p_ajson_t','ajson_parser.py',472),
  ('object_t -> pair_t COMA object_t','object_t',3,'p_object_t','ajson_parser.py',479),
  ('object_t -> pair_t COMA','object_t',2,'p_object_t','ajson_parser.py',480),
  ('object_t -> pair_t','object_t',1,'p_object_t','ajson_parser.py',481),
  ('pair_t -> clave PUNTOS tipo','pair_t',3,'p_pair_t','ajson_parser.py',490),
  ('pair_t -> clave PUNTOS ajson_t','pair_t',3,'p_pair_t','ajson_parser.py',491),
  ('clave -> CCOMILLAS','clave',1,'p_clave','ajson_parser.py',498),
  ('clave -> CSINCOMILLAS','clave',1,'p_clave','ajson_parser.py',499),
  ('ajson -> LBRACKET object RBRACKET','ajson',3,'p_ajson','ajson_parser.py',505),
  ('object -> pair COMA object','object',3,'p_object','ajson_parser.py',512),
  ('object -> pair COMA','object',2,'p_object','ajson_parser.py',513),
  ('object -> pair','object',1,'p_object','ajson_parser.py',514),
  ('pair -> clave PUNTOS expr','pair',3,'p_pair','ajson_parser.py',523),
  ('punto_valor -> punto1','punto_valor',1,'p_punto_valor','ajson_parser.py',529),
  ('punto_valor -> punto2','punto_valor',1,'p_punto_valor','ajson_parser.py',530),
  ('punto_valor -> punto_corchete','punto_valor',1,'p_punto_valor','ajson_parser.py',531),
  ('pc -> punto_valor','pc',1,'p_pc','ajson_parser.py',537),
  ('pc -> corchete','pc',1,'p_pc','ajson_parser.py',538),
  ('punto1 -> CSINCOMILLAS PUNTO CSINCOMILLAS','punto1',3,'p_punto1','ajson_parser.py',545),
  ('punto2 -> CSINCOMILLAS PUNTO punto_valor','punto2',3,'p_punto2','ajson_parser.py',551),
  ('punto_corchete -> CSINCOMILLAS PUNTO corchete','punto_corchete',3,'p_punto_corchete','ajson_parser.py',557),
  ('corchete -> CSINCOMILLAS LCORCHETE CCOMILLAS RCORCHETE recur_corchete','corchete',5,'p_corchete','ajson_parser.py',563),
  ('recur_corchete -> LCORCHETE CCOMILLAS RCORCHETE recur_corchete','recur_corchete',4,'p_recur_corchete','ajson_parser.py',572),
  ('recur_corchete -> empty','recur_corchete',1,'p_recur_corchete','ajson_parser.py',573),
  ('recur_corchete -> PUNTO CSINCOMILLAS','recur_corchete',2,'p_recur_corchete','ajson_parser.py',574),
  ('recur_corchete -> PUNTO punto_valor','recur_corchete',2,'p_recur_corchete','ajson_parser.py',575),
  ('condition -> IF LPARENT expr RPARENT LBRACKET statement RBRACKET','condition',7,'p_condition','ajson_parser.py',589),
  ('condition -> IF LPARENT expr RPARENT LBRACKET statement RBRACKET ELSE LBRACKET statement RBRACKET','condition',11,'p_condition','ajson_parser.py',590),
  ('loop -> WHILE LPARENT expr RPARENT LBRACKET statement RBRACKET','loop',7,'p_loop','ajson_parser.py',598),
  ('function -> function_no_args','function',1,'p_function','ajson_parser.py',606),
  ('function -> function_args','function',1,'p_function','ajson_parser.py',607),
  ('function_args -> FUNCTION CSINCOMILLAS LPARENT arg_list RPARENT PUNTOS tipo LBRACKET statement RETURN expr SEMICOLON RBRACKET','function_args',13,'p_function_args','ajson_parser.py',612),
  ('function_args -> FUNCTION CSINCOMILLAS LPARENT arg_list RPARENT PUNTOS tipo LBRACKET RETURN expr SEMICOLON RBRACKET','function_args',12,'p_function_args','ajson_parser.py',613),
  ('function_no_args -> FUNCTION CSINCOMILLAS LPARENT RPARENT PUNTOS tipo LBRACKET statement RETURN expr SEMICOLON RBRACKET','function_no_args',12,'p_function_no_args','ajson_parser.py',629),
  ('function_no_args -> FUNCTION CSINCOMILLAS LPARENT RPARENT PUNTOS tipo LBRACKET RETURN expr SEMICOLON RBRACKET','function_no_args',11,'p_function_no_args','ajson_parser.py',630),
  ('arg_list -> CSINCOMILLAS PUNTOS tipo','arg_list',3,'p_arg_list','ajson_parser.py',645),
  ('arg_list -> CSINCOMILLAS PUNTOS tipo COMA arg_list','arg_list',5,'p_arg_list','ajson_parser.py',646),
  ('functioncall -> CSINCOMILLAS LPARENT RPARENT','functioncall',3,'p_functioncall','ajson_parser.py',655),
  ('functioncall -> CSINCOMILLAS LPARENT argumentos RPARENT','functioncall',4,'p_functioncall','ajson_parser.py',656),
  ('argumentos -> expr','argumentos',1,'p_argumentos','ajson_parser.py',667),
  ('argumentos -> expr COMA argumentos','argumentos',3,'p_argumentos','ajson_parser.py',668),
  ('empty -> <empty>','empty',0,'p_empty','ajson_parser.py',677),
]
