//funciones correctas
//DeclaraciÃ³n

let ab = 9;

function gte(a: int, b: int): boolean { //las variables a y b son argumentos, no tienen que estar declaradas
    return a > b;
}

//Dentro de una funcion puede haber condicionales y bucles
function mod(a: int, b: int): int {
    if (a >= b) {
        a = ab;
    }
    return a;
}

function greatest_common_divisor(a: int, b: int): int {
    while (!(b == 0)) {
        let temp = b;
        b=mod(a, b);
        a = temp;
    }
    return a;
}

//Las fumciones pueden tener la lista de argumentos vacia
function get(): int {
    return 0;
}

//Llamadas a funciones
let c = get();
let d = gte(3, 4);

type ajson = {var1 : boolean};
let prueba:ajson = {var1: gte(3,4)};

if(gte(3,4)){
    let e = greatest_common_divisor(9, 10);
}

type Point = { x: int, y: int };
let punto: Point = { x:3, y:4 };
function get_point_after_jump(): Point {
    return punto;
}

function punto_ajson(): int{  
    return punto.x;
}
let f = punto_ajson();

function prueba(a:ajson): boolean{
    return a.var1;
}

function get_point_after_jump(a:int): Point {
    return { x:3, y:4 };
}

let result = get_point_after_jump();
let result2 = get_point_after_jump(3);

if (gte(3, 4)) {
    let result3 = get_point_after_jump();
}

while(gte(punto.x, 4)){
    let result4 = get_point_after_jump();
}